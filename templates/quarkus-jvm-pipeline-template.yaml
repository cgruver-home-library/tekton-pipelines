apiVersion: v1
kind: Template
metadata:
  annotations:
    description: "Build and Deploy template for Quarkus applications built using a Tekton Pipeline.  Note: Your namespace must be labeled with tekton-java-cloud-native: \"\""
    iconClass: icon-openjdk
    openshift.io/display-name: "Quarkus JVM Build & Deploy Pipeline for DEV"
    template.openshift.io/bindable: "false"
    tags: "java,quarkus"
    version: "1.0"
  name: quarkus-jvm-pipeline-dev
objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: "${APP_NAME}"
      name: "${APP_NAME}"
    spec:
      lookupPolicy:
        local: false

  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: ${APP_NAME} Quarkus JVM Service.
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      ports:
      - name: 8080-tcp
        port: 8080
        protocol: TCP
        targetPort: 8080
      selector:
        app: ${APP_NAME}

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        description: ${APP_NAME} Quarkus JVM Deployment Configuration.
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      replicas: 0
      selector:
        matchLabels:
          app: ${APP_NAME}
      strategy:
        type: RollingUpdate
        RollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
      template:
        metadata:
          labels:
            app: ${APP_NAME}
          name: ${APP_NAME}
        spec:
          initContainers:
          - args:
              - '-c'
              - >-
                cd /tmp && csplit -z -f crt- $ca_bundle '/-----BEGIN CERTIFICATE-----/' '{*}'
                && for file in crt-*; do keytool -import -noprompt -keystore
                $truststore_jks -file $file -storepass $password -alias
                service-$file; done
            command:
              - /bin/bash
            env:
              - name: ca_bundle
                value: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
              - name: truststore_jks
                value: /var/run/secrets/java.io/keystores/truststore.jks
              - name: password
                value: changeit
            image: 'image-registry.openshift-image-registry.svc:5000/openshift/jdk-11-app-runner:latest'
            imagePullPolicy: IfNotPresent
            name: pem-to-truststore
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
              - mountPath: /var/run/secrets/java.io/keystores
                name: keystore-volume
          containers: 
          - env:
            - name: JAVA_OPTIONS
              value: '-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager -Djavax.net.ssl.trustStore=/var/run/secrets/java.io/keystores/truststore.jks -Djavax.net.ssl.trustStorePassword=changeit'
            envFrom:
            - configMapRef:
                name: ${APP_NAME} 
            - secretRef:
                name: ${APP_NAME}
            image: ${APP_NAME}
            imagePullPolicy: Always
            name: ${APP_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
            volumeMounts:
            - mountPath: /var/run/secrets/java.io/keystores
              name: keystore-volume
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /
                port: 8080
                scheme: HTTP
              periodSeconds: 20
              successThreshold: 1
              timeoutSeconds: 1
            livenessProbe:
              failureThreshold: 10
              httpGet:
                path: /
                port: 8080
                scheme: HTTP
              periodSeconds: 20
              successThreshold: 1
              timeoutSeconds: 1
          terminationGracePeriodSeconds: 75
          volumes:
          - emptyDir: {}
            name: keystore-volume

  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      name: ${APP_NAME}-pipeline-run
    spec:
      pipelineRef: 
        name: build-and-deploy-java-cloud-native
      params:
      - name: appName
        value: ${APP_NAME}
      - name: build-type
        value: quarkus-jvm
      - name: git-repo
        value: ${GIT_REPOSITORY}
      - name: git-branch
        value: ${GIT_BRANCH}
      - name: config-git-repo
        value: ${CONFIG_GIT_REPOSITORY}
      - name: config-git-branch
        value: ${CONFIG_GIT_BRANCH}
      - name: config-git-path
        value: ${CONFIG_GIT_PATH}

  - apiVersion: tekton.dev/v1beta1
    kind: TaskRun
    metadata:
      name: ${APP_NAME}-initialize-deployment
    spec:
      taskRef:
        name: initialize-deployment
      params:
      - name: appName
        value: ${APP_NAME}

parameters:
  -
    description: "Name of the deployable application"
    displayName: "Application Name"
    name: APP_NAME
    required: true
  -
    description: "Git repository for source code"
    displayName: "Git Repo"
    name: GIT_REPOSITORY
    required: true
  -
    description: "Git repository branch to build app from"
    displayName: "Git Branch"
    name: GIT_BRANCH
    required: true
    value: master
  -
    description: "Git repository for application configuration"
    displayName: "App Config Git Repo"
    name: CONFIG_GIT_REPOSITORY
    required: true
  -
    description: "Git repository branch for application configuration"
    displayName: "App Config Git Branch"
    name: CONFIG_GIT_BRANCH
    required: true
    value: master
  -
    description: "Path to the application OCP config files"
    displayName: "App Config Path"
    name: CONFIG_GIT_PATH
    required: true
    value: "/"

    
