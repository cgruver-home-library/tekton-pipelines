apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: config-app
spec:
  params:
  - name: config-git-repo-url
    type: string
    description: "Git Repository URL"
  - name: config-git-branch
    type: string
    description: "Git Branch to clone"
    default: "main"
  - name: config-git-path
    type: string
    description: "Config Path"
    default: "/"
  - name: app-name
    description: the application name
  steps:
  - name: prep-build
    image: image-registry.openshift-image-registry.svc:5000/openshift/maven-jdk-mandrel-builder:latest
    imagePullPolicy: IfNotPresent
    script: |
      git clone -b $(params.config-git-branch) --single-branch $(params.config-git-repo-url) /workspace/source
    env:
    - name: user.home
      value: /tekton/home
    workingDir: "/"
  - name: apply
    image: image-registry.openshift-image-registry.svc:5000/openshift/origin-cli:latest
    imagePullPolicy: IfNotPresent
    workingDir: /workspace/source
    script: |
      echo -----------------------------------
      echo "Applying artifacts in $(params.config-git-path)/apply directory"
      for i in $(ls ./$(params.config-git-path)/apply)
      do
        sed -i "s|--APP_NAME--|$(params.app-name)|g" ./$(params.config-git-path)/apply/${i}
      done
      oc apply -f ./$(params.config-git-path)/apply
      echo "Setting deployment image path"
      DESTINATION_IMAGE="image-registry.openshift-image-registry.svc:5000/$(context.taskRun.namespace)/$(params.app-name):latest"
      oc set image deployment/$(params.app-name) $(params.app-name)=${DESTINATION_IMAGE}
      if [ -f ./$(params.config-git-path)/patch/deployment-patch.yaml ]
      then
        echo "Patching deployment"
        sed -i "s|--APP_NAME--|$(params.app-name)|g" ./$(params.config-git-path)/patch/deployment-patch.yaml
        oc patch deployment $(params.app-name) --patch "$(cat ./$(params.config-git-path)/patch/deployment-patch.yaml)"
      fi
      echo -----------------------------------
